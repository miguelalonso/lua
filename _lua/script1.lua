file.remove("init.lua");
file.open("init.lua","w+");
w = file.writeline
w([==[wifi.setmode(wifi.STATION)]==]);
w([==[wifi.sta.config("MOVISTAR_C1EB","8uqH2jjiR6E2PsSfXmvt")]==]);
w([==[print(wifi.sta.getip())]==]);
w([==[led1 = 3]==]);
w([==[led2 = 4]==]);
w([==[gpio.mode(led1, gpio.OUTPUT)]==]);
w([==[gpio.mode(led2, gpio.OUTPUT)]==]);
w([==[srv=net.createServer(net.TCP)]==]);
w([==[srv:listen(80,function(conn)]==]);
w([==[    conn:on("receive", function(client,request)]==]);
w([==[        local buf = "";]==]);
w([==[        local _, _, method, path, vars = string.find(request, "([A-Z]+) (.+)?(.+) HTTP");]==]);
w([==[        if(method == nil)then]==]);
w([==[            _, _, method, path = string.find(request, "([A-Z]+) (.+) HTTP");]==]);
w([==[        end]==]);
w([==[        local _GET = {}]==]);
w([==[        if (vars ~= nil)then]==]);
w([==[            for k, v in string.gmatch(vars, "(%w+)=(%w+)&*") do]==]);
w([==[                _GET[k] = v]==]);
w([==[            end]==]);
w([==[        end]==]);
w([==[        buf = buf.."<h1> ESP8266 Web Server</h1>";]==]);
w([==[        buf = buf.."<p>GPIO0 <a href=\"?pin=ON1\"><button>ON</button></a>&nbsp;<a href=\"?pin=OFF1\"><button>OFF</button></a></p>";]==]);
w([==[        buf = buf.."<p>GPIO2 <a href=\"?pin=ON2\"><button>ON</button></a>&nbsp;<a href=\"?pin=OFF2\"><button>OFF</button></a></p>";]==]);
w([==[        local _on,_off = "",""]==]);
w([==[        if(_GET.pin == "ON1")then]==]);
w([==[              gpio.write(led1, gpio.HIGH);]==]);
w([==[        elseif(_GET.pin == "OFF1")then]==]);
w([==[              gpio.write(led1, gpio.LOW);]==]);
w([==[        elseif(_GET.pin == "ON2")then]==]);
w([==[              gpio.write(led2, gpio.HIGH);]==]);
w([==[        elseif(_GET.pin == "OFF2")then]==]);
w([==[              gpio.write(led2, gpio.LOW);]==]);
w([==[        end]==]);
w([==[        client:send(buf);]==]);
w([==[        client:close();]==]);
w([==[        collectgarbage();]==]);
w([==[        end)]==]);
w([==[end)]==]);
file.close();
